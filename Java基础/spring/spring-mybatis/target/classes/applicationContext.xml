<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--整合配置-->
    <context:annotation-config/>
    <context:component-scan base-package="com.qfedu"/>

    <!--加载druid.properties属性文件-->
    <context:property-placeholder location="classpath:druid.properties"/>

    <!--依赖Spring容器完成数据源DataSource的创建-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--因为value传的是字符串，所以要用driverClassName-->
        <property name="driverClassName" value="${druid.driver}" />
        <property name="url" value="${druid.url}" />
        <property name="username" value="${druid.username}" />
        <property name="password" value="${druid.password}" />

        <property name="initialSize" value="${druid.pool.init}" />
        <property name="minIdle" value="${druid.pool.minIdle}" />
        <property name="maxActive" value="${druid.pool.maxActive}" />
        <property name="maxWait" value="${druid.pool.timeout}" />
    </bean>
    <!--
    <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
        <property name="driver" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>
    -->

    <!--  依赖Spring容器完成MyBatis的SqlSessionFactory对象的创建  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置数据源-->
        <property name="dataSource" ref="druidDataSource"/>
        <!--配置mapper文件的路径-->
        <property name="mapperLocations" value="classpath:mappers/*Mapper.xml"/>
        <!--配置需要定义别名的实体类的包-->
        <property name="typeAliasesPackage" value="com.qfedu.pojo"/>
        <!--可选：配置MyBatis的主配置文件（如果mybatis-config.xml还有写别的配置的话）-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--加载dao包中的所以DAO接口，通过sqlSessionFactory获取SqlSession，然后创建所有的DAO接口对象，存储在Spring容器-->
    <!--这里不需要id，因为Spring在初始化的时候就会做下面的工作-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--这句代码的意思是扫描com.qfedu.dao包里面的接口，把里面的接口交给Spring管理-->
        <property name="basePackage" value="com.qfedu.dao"/>
    </bean>
</beans>