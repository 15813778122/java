数组的定义：一组能够存储相同数据类型的数据集合
数组一定要有长度
数组中的每个数据称为元素
数组元素的位置从0开始
数组中的位置称为下标
//第一种
int[] nums = new int[5] // 此时只是有数据，里面没值
for(int i = 0; i <5; i++){
	num[i] = i + 1;
}

// 第二种
int[] num2; //先声明（定义）
num2 = new int[5]

// 第三种
int[] num3 = new int[]{1，2，3，4，5}

// 第四种
int[] num4 = {1,2,3,4,5}

// foreach 在jdk1.5之后新增的特性
for(int x:scores){
	System.out.println(x);
}

public static void print(int[] x){
	int len = x.length;
	for(int i = 0; i < len; i++){
		System.out.println(x[i])
	}
}
int scores = {1,2,3,4,5}
调用 print(scores)

// JDK1.5可变参数
// 可变参数只能是参数列表中的最后一个，因为如果形参有多个，那么会改变传参
// 可变参数作为数组使用
public static void print2(int k; int... x){
	int len = x.length;
	for(int i = 0; i < len; i++){
		System.out.println(x[i])
	}
}
调用 print2(1,2,3,4,5)

// 数组异常情况

// 测试数组的异常NullPointerException（空指针）
public static void print3(int[] x){
	// java.lang.NullPointerException
	// 当一个变量为null（没有赋值时），我们去调用了改变量的属性和方法
	System.out.println("数组的长度为："+x.length);
}
调用 print3(null)

// 测试数组的异常，数组下标越界
// java.lang.ArrayIndexOutOfBoundsException
public static void print4(int[] x){
	for(int i = 0; i<=x.length;i++){
		System.out.println(x[i]);
	}
}
调用 print4(scores)


// new关键字表示创建一个数组
int[] nums = new int[]{1,2,3,4,5}

数组内存结构分析：数组是引用类型，会存放在堆内存中